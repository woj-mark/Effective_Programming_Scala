<?xml version='1.0' encoding='UTF-8'?>
<testsuite hostname="DESKTOP-4M55DBE" name="todo.TodoSuite" tests="14" errors="0" failures="14" skipped="0" time="0.085" timestamp="2021-06-30T17:07:24">
                     <properties>
      <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/><property name="java.specification.version" value="11"/><property name="sun.cpu.isalist" value="amd64"/><property name="sun.jnu.encoding" value="Cp1252"/><property name="sun.arch.data.model" value="64"/><property name="bootstrap.mainClass" value="xsbt.boot.Boot"/><property name="java.vendor.url" value="https://openjdk.java.net/"/><property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-11.0.11\bin"/><property name="sun.java.command" value="C:\Users\User\null\Coursier\data\bin\sbt.bat"/><property name="jdk.debug" value="release"/><property name="sun.stderr.encoding" value="cp850"/><property name="java.specification.vendor" value="Oracle Corporation"/><property name="java.version.date" value="2021-04-20"/><property name="java.home" value="C:\Program Files\Java\jdk-11.0.11"/><property name="file.separator" value="\"/><property name="java.vm.compressedOopsMode" value="32-bit"/><property name="line.separator" value="
"/><property name="sun.stdout.encoding" value="cp850"/><property name="java.specification.name" value="Java Platform API Specification"/><property name="java.vm.specification.vendor" value="Oracle Corporation"/><property name="user.script" value=""/><property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/><property name="java.runtime.version" value="11.0.11+9-LTS-194"/><property name="user.name" value="User"/><property name="log4j.ignoreTCL" value="true"/><property name="file.encoding" value="Cp1252"/><property name="jnidispatch.path" value="C:\Users\User\AppData\Local\Temp\jna-2645995\jna1698176472190949201.dll"/><property name="java.vendor.version" value="18.9"/><property name="jna.loaded" value="true"/><property name="java.io.tmpdir" value="C:\Users\User\AppData\Local\Temp\"/><property name="java.version" value="11.0.11"/><property name="java.vm.specification.name" value="Java Virtual Machine Specification"/><property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/><property name="sun.os.patch.level" value=""/><property name="java.library.path" value="C:\Program Files\Java\jdk-11.0.11\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\User\AppData\Local\Microsoft\WindowsApps;C:\Users\User\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\User\Libraries\null\Coursier\data\bin;C:\Users\User\null\Coursier\cache\jvm\adopt@1.8.0-292\bin;C:\Users\User\null\Coursier\data\bin;C:\Users\User\null\Coursier\cache\v1\https\github.com\sbt\sbt\releases\download\v1.5.3\sbt-1.5.3.zip\sbt;C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.2\bin;;C:\Users\User\AppData\Local\GitHubDesktop\bin;C:\ProgramData\User\GitHubDesktop\bin;."/><property name="java.vendor" value="Oracle Corporation"/><property name="sun.io.unicode.encoding" value="UnicodeLittle"/><property name="sun.desktop" value="windows"/><property name="java.class.path" value="C:\Users\User\null\Coursier\data\bin\sbt.bat;C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\null\Coursier\cache\v1\https\repo1.maven.org\maven2\io\get-coursier\sbt\sbt-runner\0.2.0\sbt-runner-0.2.0.jar;C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\null\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-sbt\sbt-launch\1.5.3\sbt-launch-1.5.3.jar"/><property name="java.vm.vendor" value="Oracle Corporation"/><property name="coursier.mainJar" value="C:\Users\User\null\Coursier\data\bin\sbt.bat"/><property name="user.variant" value=""/><property name="jline.shutdownhook" value="false"/><property name="user.timezone" value="Europe/London"/><property name="os.name" value="Windows 10"/><property name="java.vm.specification.version" value="11"/><property name="sun.java.launcher" value="SUN_STANDARD"/><property name="user.country" value="GB"/><property name="sun.cpu.endian" value="little"/><property name="user.home" value="C:\Users\User"/><property name="user.language" value="en"/><property name="swoval.tmpdir" value="C:\Users\User\.sbt\1.0"/><property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/><property name="jline.esc.timeout" value="0"/><property name="path.separator" value=";"/><property name="prog.dir" value="C:\\Users\\User\\null\\Coursier\\data\\bin\"/><property name="os.version" value="10.0"/><property name="jna.nosys" value="true"/><property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/><property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/><property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/><property name="sbt-launch.version" value="1.5.3"/><property name="user.dir" value="C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo"/><property name="os.arch" value="amd64"/><property name="java.vm.info" value="mixed mode"/><property name="java.vm.version" value="11.0.11+9-LTS-194"/><property name="java.class.version" value="55.0"/>
    </properties>
                     <testcase classname="todo.TodoSuite" name="Created tasks can be read" time="0.029">
                                                 <failure message="munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:71 Using InMemoryModel: We expected the task Task(Active,An active task,Some(The notes),List(Tag(a), Tag(b))) but we received None instead.
70:
[7m71:      assertTask(name, model.read(id1), task1)[0m
72:" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:71 Using InMemoryModel: We expected the task Task(Active,An active task,Some(The notes),List(Tag(a), Tag(b))) but we received None instead.
70:
[7m71:      assertTask(name, model.read(id1), task1)[0m
72:
	at munit.Assertions.fail(Assertions.scala:261)
	at munit.Assertions.fail$(Assertions.scala:15)
	at munit.FunSuite.fail(FunSuite.scala:11)
	at todo.TodoSuite.assertTask(TodoSuite.scala:40)
	at todo.TodoSuite.allTests$$anonfun$1(TodoSuite.scala:18)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Updated tasks can be read" time="0.003">
                                                 <failure message="munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:81 Using InMemoryModel: We expected the task Task(Completed(2021-06-30T17:07:24.160267500+01:00[Europe/London]),An inactive task,None,List(Tag(c))) but we received None instead.
80:
[7m81:      assertTask(name, updated, task2)[0m
82:    }" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:81 Using InMemoryModel: We expected the task Task(Completed(2021-06-30T17:07:24.160267500+01:00[Europe/London]),An inactive task,None,List(Tag(c))) but we received None instead.
80:
[7m81:      assertTask(name, updated, task2)[0m
82:    }
	at munit.Assertions.fail(Assertions.scala:261)
	at munit.Assertions.fail$(Assertions.scala:15)
	at munit.FunSuite.fail(FunSuite.scala:11)
	at todo.TodoSuite.assertTask(TodoSuite.scala:40)
	at todo.TodoSuite.allTests$$anonfun$2(TodoSuite.scala:18)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Deleted tasks are no longer read" time="0.002">
                                                 <failure message="munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:88 Using InMemoryModel: We expected deleting Id(5) to return true
87:
[7m88:      assert(model.delete(id1), s&quot;Using $name: We expected deleting $id1 to return true&quot;)[0m
89:" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:88 Using InMemoryModel: We expected deleting Id(5) to return true
87:
[7m88:      assert(model.delete(id1), s&quot;Using $name: We expected deleting $id1 to return true&quot;)[0m
89:
	at munit.FunSuite.assert(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$3(TodoSuite.scala:18)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Tasks returns all inserted tasks in insertion order" time="0.039">
                                                 <failure message="munit.ComparisonFailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:104
103:                   List((id1 -&gt; task1)),
[7m104:                   s&quot;Using $name: The list of tasks is different to the tasks that were created&quot;)[0m
105:
Using InMemoryModel: The list of tasks is different to the tasks that were created
[1m=&gt; Obtained[0m
Nil
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-Nil[0m
[92m+List([0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 7[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  )[0m
[92m+)[0m" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:104
103:                   List((id1 -&gt; task1)),
[7m104:                   s&quot;Using $name: The list of tasks is different to the tasks that were created&quot;)[0m
105:
Using InMemoryModel: The list of tasks is different to the tasks that were created
[1m=&gt; Obtained[0m
Nil
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-Nil[0m
[92m+List([0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 7[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  )[0m
[92m+)[0m
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$4(TodoSuite.scala:104)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Tasks(tag) returns only tasks with given tag" time="0.003">
                                                 <failure message="munit.ComparisonFailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:119
118:
[7m119:      assertEquals(model.tasks(Tag(&quot;a&quot;)).toList, List(id1 -&gt; task1, id3 -&gt; task3))[0m
120:      assertEquals(model.tasks(Tag(&quot;b&quot;)).toList, List(id1 -&gt; task1))
values are not the same
[1m=&gt; Obtained[0m
Nil
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-Nil[0m
[92m+List([0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 8[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  ),[0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 10[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
[92m+      description = &quot;Another active task&quot;,[0m
[92m+      notes = None,[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;c&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  )[0m
[92m+)[0m" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:119
118:
[7m119:      assertEquals(model.tasks(Tag(&quot;a&quot;)).toList, List(id1 -&gt; task1, id3 -&gt; task3))[0m
120:      assertEquals(model.tasks(Tag(&quot;b&quot;)).toList, List(id1 -&gt; task1))
values are not the same
[1m=&gt; Obtained[0m
Nil
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-Nil[0m
[92m+List([0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 8[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
[92m+      description = &quot;An active task&quot;,[0m
[92m+      notes = Some([0m
[92m+        value = &quot;The notes&quot;[0m
[92m+      ),[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;b&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  ),[0m
[92m+  Tuple2([0m
[92m+    _1 = Id([0m
[92m+      toInt = 10[0m
[92m+    ),[0m
[92m+    _2 = Task([0m
[92m+      state = Active(),[0m
[92m+      description = &quot;Another active task&quot;,[0m
[92m+      notes = None,[0m
[92m+      tags = List([0m
[92m+        Tag([0m
[92m+          tag = &quot;a&quot;[0m
[92m+        ),[0m
[92m+        Tag([0m
[92m+          tag = &quot;c&quot;[0m
[92m+        )[0m
[92m+      )[0m
[92m+    )[0m
[92m+  )[0m
[92m+)[0m
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$5(TodoSuite.scala:119)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="complete changes state to completed, if task is not already completed" time="0.001">
                                                 <failure message="munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:128 Using InMemoryModel: We expected a task but we received None instead.
127:
[7m128:      assertTaskActive(name, model.read(id1))[0m
129:      assertTaskCompleted(name, model.read(id2))" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.FailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:128 Using InMemoryModel: We expected a task but we received None instead.
127:
[7m128:      assertTaskActive(name, model.read(id1))[0m
129:      assertTaskCompleted(name, model.read(id2))
	at munit.Assertions.fail(Assertions.scala:261)
	at munit.Assertions.fail$(Assertions.scala:15)
	at munit.FunSuite.fail(FunSuite.scala:11)
	at todo.TodoSuite.assertTaskActive(TodoSuite.scala:50)
	at todo.TodoSuite.allTests$$anonfun$6(TodoSuite.scala:18)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="tags returns all tags" time="0.004">
                                                 <failure message="munit.ComparisonFailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:139
138:      val id1 = model.create(task1)
[7m139:      assertEquals(model.tags.toList, List(Tag(&quot;a&quot;), Tag(&quot;b&quot;)), s&quot;Using $name&quot;)[0m
140:
Using InMemoryModel
[1m=&gt; Obtained[0m
Nil
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-Nil[0m
[92m+List([0m
[92m+  Tag([0m
[92m+    tag = &quot;a&quot;[0m
[92m+  ),[0m
[92m+  Tag([0m
[92m+    tag = &quot;b&quot;[0m
[92m+  )[0m
[92m+)[0m" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: munit.ComparisonFailException: C:\Users\User\Documents\Effective_Programming_Scala_Course\Effective_Programming_Scala\todo\src\test\scala\todo\TodoSuite.scala:139
138:      val id1 = model.create(task1)
[7m139:      assertEquals(model.tags.toList, List(Tag(&quot;a&quot;), Tag(&quot;b&quot;)), s&quot;Using $name&quot;)[0m
140:
Using InMemoryModel
[1m=&gt; Obtained[0m
Nil
[1m=&gt; Diff[0m ([91m- obtained[0m, [92m+ expected[0m)
[91m-Nil[0m
[92m+List([0m
[92m+  Tag([0m
[92m+    tag = &quot;a&quot;[0m
[92m+  ),[0m
[92m+  Tag([0m
[92m+    tag = &quot;b&quot;[0m
[92m+  )[0m
[92m+)[0m
	at munit.FunSuite.assertEquals(FunSuite.scala:11)
	at todo.TodoSuite.allTests$$anonfun$7(TodoSuite.scala:139)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$_$test$$anonfun$2$$anonfun$2$$anonfun$2(FunFixtures.scala:34)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Created tasks can be read-1" time="0.0">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Updated tasks can be read-1" time="0.0">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Deleted tasks are no longer read-1" time="0.001">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Tasks returns all inserted tasks in insertion order-1" time="0.001">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="Tasks(tag) returns only tasks with given tag-1" time="0.0">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="complete changes state to completed, if task is not already completed-1" time="0.001">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase><testcase classname="todo.TodoSuite" name="tags returns all tags-1" time="0.001">
                                                 <failure message="scala.NotImplementedError: an implementation is missing" type="sbt.ForkMain$ForkError">sbt.ForkMain$ForkError: scala.NotImplementedError: an implementation is missing
	at scala.Predef$.$qmark$qmark$qmark(Predef.scala:345)
	at todo.PersistentModel$.clear(PersistentModel.scala:123)
	at todo.TodoSuite.makeModelFixture$$anonfun$1(TodoSuite.scala:22)
	at munit.FunFixtures.apply$$anonfun$3$$anonfun$1(FunFixtures.scala:60)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:672)
	at scala.concurrent.impl.Promise$Transformation.run(Promise.scala:431)
	at munit.Suite$$anon$1.execute(Suite.scala:26)
	at scala.concurrent.impl.Promise$Transformation.submitWithValue(Promise.scala:393)
	at scala.concurrent.impl.Promise$DefaultPromise.submitWithValue(Promise.scala:302)
	at scala.concurrent.impl.Promise$DefaultPromise.dispatchOrAddCallbacks(Promise.scala:276)
	at scala.concurrent.impl.Promise$DefaultPromise.map(Promise.scala:146)
	at scala.concurrent.Future$.apply(Future.scala:672)
	at munit.FunFixtures.munit$FunFixtures$FunFixture$$$_$apply$$anonfun$1(FunFixtures.scala:60)
	at munit.FunFixtures$FunFixture.test$$anonfun$1(FunFixtures.scala:33)
</failure>
                                               </testcase>
                     <system-out><![CDATA[]]></system-out>
                     <system-err><![CDATA[]]></system-err>
                   </testsuite>